[{"C:\\Users\\user\\Desktop\\russian-regions-map\\src\\App.tsx":"1","C:\\Users\\user\\Desktop\\russian-regions-map\\src\\reportWebVitals.ts":"2"},{"size":4309,"mtime":1607464711921,"results":"3","hashOfConfig":"4"},{"size":425,"mtime":1607202846743,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"a65u1o",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\russian-regions-map\\src\\App.tsx",["11"],"// @ts-nocheck\nimport React from 'react';\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxTraffic from '@mapbox/mapbox-gl-traffic';\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport LanguageControl from 'mapbox-gl-controls/lib/language';\nimport RulerControl from 'mapbox-gl-controls/lib/ruler';\nimport CompassControl from 'mapbox-gl-controls/lib/compass';\nimport ZoomControl from 'mapbox-gl-controls/lib/zoom';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\n\nimport \"@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions.css\";\nimport MapboxDirections from '@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions'\n\nconst accessToken = process.env.REACT_APP_ACCESS_TOKEN;\n\nfunction App() {\n  React.useEffect(() => {\n    mapboxgl.accessToken = accessToken;\n\n    const map = new mapboxgl.Map({\n      container: 'map', // container id\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [37.618423, 55.755826],\n      zoom: 4 // starting zoom\n    });\n\n    let hoveredStateId = null;\n\n    map.on(\"load\", () => {\n      const layers = map.getStyle().layers;\n\n      const directions = new MapboxDirections({\n        accessToken,\n        unit: 'metric',\n        profile: 'mapbox/cycling'\n      });\n\n      map.addControl(directions, 'top-left');\n\n      // Find the index of the first symbol layer in the map style\n      let firstSymbolId;\n      layers?.forEach(layer => {\n        if (layer.type === \"symbol\" && !firstSymbolId) {\n          firstSymbolId = layer.id;\n        }\n      });\n\n      // map.addControl(\n      //   new MapboxGeocoder({\n      //     accessToken,\n      //     mapboxgl,\n      //   }),\n      //   \"top-right\"\n      // );\n\n      // with browser detect:\n      map.addControl(new LanguageControl());\n      map.addControl(new RulerControl(), 'top-right');\n      map.addControl(new CompassControl(), 'top-right');\n      map.addControl(new ZoomControl(), 'top-right');\n\n      map.on('mousemove', 'russia-fill', function (e) {\n        if (e.features.length > 0) {\n          if (hoveredStateId) {\n            map.setFeatureState(\n              { source: 'russia', id: hoveredStateId },\n              { hover: false }\n            );\n          }\n          hoveredStateId = e.features[0].id;\n\n          console.log(e.features[0].id, e.features[0].properties.name);\n\n          map.setFeatureState(\n            { source: 'russia', id: hoveredStateId },\n            { hover: true }\n          );\n        }\n      });\n\n      // When the mouse leaves the state-fill layer, update the feature state of the\n      // previously hovered feature.\n      map.on('mouseleave', 'russia-fill', function () {\n        if (hoveredStateId) {\n          map.setFeatureState(\n            { source: 'russia', id: hoveredStateId },\n            { hover: false }\n          );\n        }\n        hoveredStateId = null;\n      });\n\n      console.log(\"firstSymbolId is\", firstSymbolId);\n\n      map.addControl(new MapboxTraffic());\n\n      fetch(\"https://raw.githubusercontent.com/codeforamerica/click_that_hood/master/public/data/russia.geojson\")\n        .then(data => data.json())\n        .then(({ features, type }) => {\n          features.forEach(feature => {\n            feature.id = feature.properties.cartodb_id;\n          })\n          console.log(\"f\", features);\n          map.addSource(\"russia\", {\n            'type': 'geojson',\n            'data': { type, features }\n          });\n\n          map.addLayer({\n            'id': 'russia-line',\n            'type': 'line',\n            'source': 'russia',\n            'layout': {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            'paint': {\n              'line-color': 'blue',\n              'line-width': 1\n            }\n          }, firstSymbolId);\n\n          map.addLayer({\n            'id': 'russia-fill',\n            'type': 'fill',\n            'source': 'russia',\n            'layout': {},\n            'paint': {\n              'fill-color': '#088',\n              'fill-opacity': [\n                'case',\n                ['boolean', ['feature-state', 'hover'], false],\n                0.3,\n                0.2\n              ]\n            }\n          });\n        }, firstSymbolId);\n    })\n  }, []);\n\n  return (\n    <div id=\"map\" />\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Desktop\\russian-regions-map\\src\\reportWebVitals.ts",[],{"ruleId":"12","severity":1,"message":"13","line":11,"column":8,"nodeType":"14","messageId":"15","endLine":11,"endColumn":22},"@typescript-eslint/no-unused-vars","'MapboxGeocoder' is defined but never used.","Identifier","unusedVar"]